//Parameters for estimation command and simulation
// SIMPLE MODEL
UNITID; gwno
TIMEID; year
DEP; conflict
//When using nv() function it has to be calculated before use
SUPPVAR; timeinstatus; if(lv(conflict)==nv(conflict)|lv(timeinstatus) + 1|1)
SUPPVAR; lts; ln(lv(timeinstatus))
SUPPVAR; fixedeffect; (lhv(fixedeffect))
SUPPVAR; c0; if(nv(conflict)==0.0|1|0)
SUPPVAR; c0_nl; if(nv(conflict)==0.0|1|0)
SUPPVAR; nc2l; if(lv(nc)==1.0|1|0)
SUPPVAR; timeinstatusnc; if(lv(nc)==lv(nc2l)|lv(timeinstatusnc) + 1|1)
SUPPVAR; dummyconflict; if(nv(conflict)>=1.0|1|0)
SUPPVAR; nopko; (lhv(nopko))
SUPPVAR; llPKObudgsq; lv(llPKObudget)*lv(llPKObudget)
SUPPVAR; PKObudget; exp(lv(llPKObudget))
SUPPVAR; GDPcapSSP2; exp(lv(lGDPcap))
//SUPPVAR; lGDPcapPKOtrans; lv(lPKOtrans)*lv(lGDPcap)
//SUPPVAR; lGDPcapPKOtrad; lv(lPKOtrad)*lv(lGDPcap)
//SUPPVAR; lGDPcapllPKObudget; lv(llPKObudget)*lv(lGDPcap)
SUPPVAR; lGDPcapllPKObudgsq; lv(llPKObudgsq)*lv(lGDPcap)
IDEP; c1 lagged; if(nv(conflict)==1.0|1|0)
IDEP; c2 lagged; if(nv(conflict)==2.0|1|0)
IDEP; ltsc0; nv(lts)*lv(c0)
IDEP; nc; if(checkforedgevalue(dummyconflict|1.0)==1.0|1|0)
IDEP; ncc1; nv(nc)*nv(c1)
IDEP; ncc2; nv(nc)*nv(c2)
IDEP; ltsnc; ln(nv(timeinstatusnc))
IDEP; ncts0; nv(ltsc0)*(1-nv(nc))
IDEP; lpop lagged; lhv(lpop)
//IDEP; lpop_c1 lagged; lhv(lpop)*lv(c1)
//IDEP; lpop_c2 lagged; lhv(lpop)*lv(c2)
//IDEP; lpop_ltsc0 lagged; nv(lpop)*lv(ltsc0)
IDEP; lGDPcap; lv(lGDPcap)  + (-.0232384*lv(lGDPcap))  + (.0160339*lv(ltimeindep))  + (-.0220856*lv(c1))  + (-.0375699*lv(c2))  + (-6.94e-06*lv(ltsc0))  + (-.0073067*lv(nc))  + (.0081603*lv(ncc1))  + (.0159668*lv(ncc2))  + (-.0197959*lv(lpop))  + (.0540174*lv(lPKOtrad))  + (.0698832*lv(lPKOtrans))  + (-.0071373*lv(llPKObudget))  + (.0005389*lv(llPKObudgsq))  + (.0178519*lv(lPKOneighbor))  + (-.0014623*lv(lGDPcapPKOtrans))  + (-.003554*lv(lGDPcapPKOtrad))  + lv(fixedeffect)
IDEP; lGDPcap_c1 lagged; lv(lGDPcap)*nv(c1)
IDEP; lGDPcap_c2 lagged; lv(lGDPcap)*nv(c2)
IDEP; lGDPcap_ltsc0 lagged; lv(lGDPcap)*nv(ltsc0)
IDEP; ltimeindep; lhv(ltimeindep)
//IDEP; lGDPcapPKOtrans; lv(lPKOtrans)*lv(lGDPcap)
//IDEP; lGDPcapPKOtrad; lv(lPKOtrad)*lv(lGDPcap)
//IDEP; lGDPcapllPKObudget; lv(llPKObudget)*lv(lGDPcap)
//IDEP; dec90; lhv(dec90)
//IDEP; dec60_lpop; nv(lpop)*lv(dec60)
//IDEP; dec70_lpop; nv(lpop)*lv(dec70)
//IDEP; dec80_lpop; nv(lpop)*lv(dec80)
//IDEP; dec90_lpop; nv(lpop)*lv(dec90)
//IDEP; dec60_lGDPcap; nv(lGDPcap)*lv(dec60)
//IDEP; dec70_lGDPcap; nv(lGDPcap)*lv(dec70)
//IDEP; dec80_lGDPcap; nv(lGDPcap)*lv(dec80)
//IDEP; dec90_lGDPcap; nv(lGDPcap)*lv(dec90)
//IDEP; reg1; lhv(reg1)
//IDEP; reg2; lhv(reg2)
//IDEP; reg3; lhv(reg3)
//IDEP; reg4; lhv(reg4)
//IDEP; reg5; lhv(reg5)
//IDEP; reg6; lhv(reg6)
//IDEP; reg7; lhv(reg7)
//IDEP; reg8; lhv(reg8)
//IDEP; reg9; lhv(reg9)
//IDEP; polity2; lhv(polity2)
//IDEP; polity2sq; lhv(polity2sq)
//IDEP; polity2_c1; lhv(polity2_c1)
//IDEP; polity2sq_c1; lhv(polity2sq_c1)
//IDEP; polity2_c2; lhv(polity2_c2)
//IDEP; polity2sq_c2; lhv(polity2sq_c2)
//IDEP; polity2_GDPcap; lhv(polity2_GDPcap)
//IDEP; polity2sq_GDPcap; lhv(polity2sq_GDPcap)
//IDEP; proxregchange2_n_1; lhv(proxregchange2_n_1)
//IDEP; proxregchange2_n_2; lhv(proxregchange2_n_2)
//IDEP; proxregchange2_n_4; lhv(proxregchange2_n_4)
//IDEP; proxregchange2_s_1; lhv(proxregchange2_s_1)
//IDEP; proxregchange2_s_2; lhv(proxregchange2_s_2)
//IDEP; proxregchange2_s_4; lhv(proxregchange2_s_4)
//IDEP; proxregchange3_n_1; lhv(proxregchange3_n_1)
//IDEP; proxregchange3_n_2; lhv(proxregchange3_n_2)
//IDEP; proxregchange3_n_4; lhv(proxregchange3_n_4)
//IDEP; proxregchange3_s_1; lhv(proxregchange3_s_1)
//IDEP; proxregchange3_s_2; lhv(proxregchange3_s_2)
//IDEP; proxregchange3_s_4; lhv(proxregchange3_s_4)
//IDEP; proxregchange4_n_1; lhv(proxregchange4_n_1)
//IDEP; proxregchange4_n_2; lhv(proxregchange4_n_2)
//IDEP; proxregchange4_n_4; lhv(proxregchange4_n_4)
//IDEP; proxregchange4_s_1; lhv(proxregchange4_s_1)
//IDEP; proxregchange4_s_2; lhv(proxregchange4_s_2)
//IDEP; proxregchange4_s_4; lhv(proxregchange4_s_4)
//IDEP; PolityStdAuth; lhv(PolityStdAuth)
//IDEP; NA_elect; lhv(NA_elect)
//IDEP; maj_elect; lhv(maj_elect)
//IDEP; pr_elect; lhv(pr_elect)
//IDEP; no_elect; lhv(no_elect)
IDEP; lPKOtrad; lhv(lPKOtrad)
IDEP; lPKOtrans; lhv(lPKOtrans)
IDEP; llPKObudget; lhv(llPKObudget)
//IDEP; llPKObudgsq; lhv(llPKObudgsq)
IDEP; lPKOneighbor; lhv(lPKOneighbor)
//IDEP; DS_ord_1; lhv(DS_ord_1)
//IDEP; DS_ord_2; lhv(DS_ord_2)
//IDEP; DS_ord_3; lhv(DS_ord_3)
//IDEP; DS_ord_4; lhv(DS_ord_4)
//IDEP; PKOprevious; lhv(PKOprevious)
IDEP; random_1; lhv(random_1)
IDEP; random_2; lhv(random_2)
LINKS;neighbors
IFS; if year >= 1950 & year <= 2013
BETADRAWS; 1
SPLIT; none
ITERATIONS; 15
STARTTIME; 2000
LOGFILE; Log_PKO_sim_insamplev12.txt
SIMULATIONS; 10
ENDPARAMS; baseoutcome(0)
RESULTFILE; C:\PredictionTemp\PKOsim/Res_sim_1_1_1_1.txt
